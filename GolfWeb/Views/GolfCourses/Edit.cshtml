@model GolfWeb.Models.GolfCourse

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>GolfCourse</h4>
        <h4>Course: @Model.Name</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.GolfCourseID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseSlope, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseSlope, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseSlope, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseRating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseRating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseRating, "", new { @class = "text-danger" })
            </div>
        </div>
        </div>
        
        
          <div class="row">
              <div class="col-xs-4">
                  @Html.DisplayNameFor(model => model.Holes.FirstOrDefault().HoleNum)
              </div>
              <div class="col-xs-4">
                  @Html.DisplayNameFor(model => model.Holes.FirstOrDefault().Par)
              </div>
              <div class="col-xs-4">
                  @Html.DisplayNameFor(model => model.Holes.FirstOrDefault().Handicap)
              </div>
          </div>

            foreach (var item in Model.Holes)
            {
                <div class="row">
                    <div class="col-xs-4">
                        @Html.DisplayFor(model => item.HoleNum)
                    </div>
                    <div class="col-xs-4">
                        <div class="form-inline">
                            <div class="form-group">
                                <div class="col-xs-6">
                                    @Html.EditorFor(model => item.Par, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => item.Par, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                </div>
                    <div class="col-xs-4">
                        <div class="form-inline">
                            <div class="form-group">
                                <div class="col-xs-6">
                                    @Html.EditorFor(model => item.Handicap, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => item.Handicap, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
           
            }
   
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
